- https (как работи, за какво се ползва, защо ни дава security)
- криптиране и хеширане (каква е разликата, къде се ползват (примерно в https :D)
- RSA encryption (тук по-скоро го споменахме покрай public/private key pair-ите, но ако ти е интересно може да го видиш как работи)
- public / private key pair (то би трябвало да е обяснено в https)
- authentication (oauth, oauth 2, какви видове authentication знаеш + евентуално как работят)
- всичко свързано с бази от данни което се сетиш (разликата м/у релационни и не релационни. Какво са релациите в една база. За какво се ползва такава база. Индекси. Писала ли си сложни заявки, кога ти се е налагало, за колко време са минавали)
- microservices (какво представляват, за какво се ползват. Много services, които имат връзка помежду си правят ли microservices архитектура (мисля, че това ме питаще единия пич)
- load balancing (за какво може да го ползваме, как работи. Примерен въпрос: какво стои между server-a и клиента.... load balancer. Доста от проблемите, които ми даваха се оказваше накрая, че уж се оправят с load balancing)
- архитектурни patters (не мисля, че са супер важни - аз не казах нито един)
- стандартни въпроси за структури от данни (скорост на работа, на структурите, начини на обхождане на дървета, за какво би ползвала някоя структура и защо и тн..)
- REST (малко обяснение какво е и защо хората го ползват. Тук аз си вкарах автогол и казах че е много lightweight като пича ме нахрани че то и SOAP е такъв. Та трябва някакво адекватно обяснение да намерим. Обяснение на REST методите get, post, put, delete. Накараха ме да напиша примерни endpoint-i. /students (get); /students/:id (get); students/:id (delete) и тн.
- arhitectual patterns - pattern-и като цяло. Питаха ме кои са ми любимите, ама не знам дали беше много важно понеже не им казах почти нищо и бяха fine
======================================

- spring (тука по-скоро ще ти покажа примерен app, за да се ориентираш)
- hibernate ORM (тука има твърде много за четене, може да ти покажа някои неща)
- angular (ако кажеш, че си го работила може да те питат - тук мога да напиша доста неща ама май за сега няма смисъл)

- spring: какво е spring, кога си го ползвал, защо си решил да ползваш него. Кои части на spring си ползвал, как си ги конфигурирал (примерно Spring boot, Spring data) за конфигурирането не беше много подробно.
Какво е IoC Container, за какво ни помага. Какво са Beans, bean scope (какви bean scopes знаеш, какъв е default-ния в spring). Ако си ползвал Spring boot какви конфигурации прави автоматично - защо би решил
да ги направиш ръчно вместо да използваш spring boot. Писане на rest със Spring - какви анотации се ползват.
- Hibernate / Spring Data / JPA: какво представляват, как се setup-ват. Каква е разликата между тях. Какви анотации си ползвал (без много подробности). Какво се случва, когато направиш заявка с Hibernate (понякога прави ненужно много заявки
или ги оптимизира зле, може да го видиш като дигнеш show_sql флага и почне да ти принти заявките, които прави). Би ли ползвал hibernate в голям проект, в който performance-а трябва да е много голям.
- Angular: какво e shadow dom, какво е view encapsulation в angular. Как би оптимизирал приложение, което зарежда много записи наведнуж и ги показва на потребителя (pagination, кеширане на данните в service). 
Налагало ли ти се е да оптимизираш angular app, който работи бавно и как (промяна на detection strategy-то + обяснение какво прави точно). Как работи two-way-data binding-a. Писал ли си тестове, кой framework си ползвал.
Каква е разликата между protractor и jasmine. Кога се налага да правим end to end тестове, писал ли си такива.
- java: много странни, мисля че просто им беше останало време и го запълваха. Може ли да имаш static клас, ако да къде може да го дефинираш. Как работи hasCode метода. Ако в Map имаш обект сложен като ключ и промениш
някое property на обекта какво ще стане + още глупости свързани с обект, който е ключ в Map не ги помня всичките. Как се компилират java класовете и как работят в JVM-a.


PaySafe
edin comparator da se napi6e
edin regex nqkakuv s custom pravila kakto trqbva da match-ne
edna zada4a s nekuv 3 meren masiv
deto vhodnite danni za da gi obraboti6 ti trqbvat 20 minuti
edna zada4a s pisane i 4etene ot fail
koeto be6e super stranno
6toto uslovieto be6e
pro4etete faila
custom.txt
ama kude e toq fail eba li mu maikata
posle edna v koqto trqbva6e da se napravi call kum API-to na wikipedia
i da se izvadi nekva informaciq
i nakraq
zada4ata sus skobite...


====JAVA====

- Какво е JVM?

- Какво е Garbage collector?

- На какъв принцип/алгоритъм изчиства помаетта (кои обекти  решава, че трябва да изтрие)?

- Типове GC?

- Какво е heap/ stack, колко вида стекове има и кой е алгоритъмът за запазване на обекти в heap-a?

- Архитектурата на JVM..?

- reference vs object?

- soft vs weak vs phantom vs .... reference?

- Ако имаме клас А и клас Б и  А има поле от тип Б и в Б имаме поле от тип А ( циклична зависимост ), GC ще ги зачисти ли , кога , трябва ли да има външна референция към някой..?

- Какво е stacktrace и как е структуриран той (първия е от main-а (най-долу), последения е от последения метод, обикновено, където е станал exception-a)?

- Контракта между hashcode и equals

 

- Какви design patterns знам и съм използвал?

- устно как се имплементира singleton (стъпки) (чрез enum)?

 

====COLLECTIONS====

- Кои колекции си използвал?

- Какво е ArrayList, защо е най-масов; capacity vs size, как е имплементиран той вътрешно?

- Мап, какви  видове мапове знаеш и си използвал?

- Каква е сложността при добавяне на елемент в hashmap?

- Какво става , ако добавим елементи с еднакъв key?

- какво се изплозва за сравнениее на ключовете при добавяне ?

- Какво е дърво, колко вида дървета съм използвал?

- Как мога да наредя стрингове по naturale order?

 

====SPRING====

- Кой design pattern имплементира?

- spring bean - scope и какво става, като се анотира така клас?

- @Transactional, интерсептори ..?

- Видове scopes - какво е singleton и prototype в контекста на спринг?

 

- Какво Rest?

- какво е SOAP?

- може ли в едно приложение да има rest и soap?

- върху кой протокол за комуникация "лежи" rest?

- Как деплойваме, със скрипт или ръчно?

- на к'ви сървъри деплойваме/поддържаме?

 

====THREADS====

- Какво са нишки и как съм ги използвал?

- Deadlock ?

- Какво е profiling, използвал ли съм го и как решавам проблеми от типа memory leak и deadlock?

- как ще синхронизирам един клас (синхронизация по метод, по блок, volatile, syncronize)?

 

====MAVEN====

- какво е local repository?

- в един war колко библиотеки има накрая, ако се декларирали 5 външни библиотеки?

- как работи mvn clean install

- какво е groupID, transitive dependancy?

- Какво е преимуществото да работиш с инструмент за билдване, пред това да билдваш на ръка проекта?








